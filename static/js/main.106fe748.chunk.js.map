{"version":3,"sources":["contexts/optionsRowContext.tsx","components/inputs/radioButtons.tsx","components/inputs/checkboxes.tsx","components/inputs/datePicker.tsx","components/formatting/optionsRow.tsx","contexts/inputRowContext.tsx","components/fileSelection/fileUpload.tsx","components/fileSelection/fileImport.tsx","components/formatting/inputRow.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["OptionsRowContext","createContext","outputType","setOutputType","measurementPeriodStart","Date","setMeasurementPeriodStart","measurementPeriodEnd","setMeasurementPeriodEnd","calculationOptions","calculateHTML","calculateSDEs","setCalculationOptions","OptionsRowProvider","children","useState","Provider","value","RadioButtonsGroup","useContext","FormControl","component","RadioGroup","name","onChange","event","target","FormControlLabel","control","Radio","color","label","CheckboxesGroup","OptionsRowInfo","handleChange","checked","FormGroup","Checkbox","MeasurementDateStart","utils","DateFnsUtils","DatePicker","format","MeasurementDateEnd","OptionsRow","Fragment","Grid","item","xs","InputRowContext","onMeasureUpload","acceptedFiles","fileRejections","onPatientUpload","measureFileName","setMeasureFileName","files","patientFileName","setPatientFileName","onMeasureDropdownChange","onECQMMeasureDropdownChange","onPatientDropdownChange","onECQMPatientDropdownChange","onFHIRPatientDropdownChange","measureOptions","ecqmMeasureOptions","patientOptions","ecqmPatientOptions","fhirPatientOptions","setECQMPatientOptions","setPatientOptions","setFHIRPatientOptions","measureBundle","patientBundle","setMeasureBundle","setPatientBundle","fhirName","setFHIRName","InputRowProvider","setMeasureOptions","setECQMMeasureOptions","useCallback","measureBundleFile","reader","FileReader","onload","path","JSON","parse","result","readAsText","patientBundleFile","useEffect","fetch","then","response","json","data","names","map","n","status","headers","get","resetTime","parseInt","Error","catch","e","console","error","slice","filteredNames","filter","startsWith","log","patientName","patientChoice","fhirPatientFiles","paths","p","Promise","all","data1","push","Container","styled","div","props","isDragAccept","isDragReject","isDragActive","getColor","MeasureFileUpload","onDrop","useDropzone","accept","getRootProps","getInputProps","className","PatientFileUpload","useStyles","makeStyles","theme","createStyles","root","width","MeasureDropdown","classes","style","Select","option","MenuItem","ECQMMeasureDropdown","PatientDropdown","ECQMPatientDropdown","FHIRPatientDropdown","InputRow","container","IconButton","aria-label","onClick","display","flexDirection","alignItems","margin","spacing","formControl","textField","marginLeft","marginRight","highlightedMarkup","whiteSpace","App","results","setResults","htmls","setHTMLs","id","justify","Button","variant","options","toISOString","Calculator","calculateRaw","detailedResultsCalculation","calculate","IDhtml","i","detailedResults","undefined","groupId","html","mrResults","calculateMeasureReports","mrs","m","text","calculateGapsInCare","direction","src","enableClipboard","collapsed","fileDownload","stringify","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.106fe748.chunk.js","sourcesContent":["import { CalculatorTypes } from 'fqm-execution';\nimport React, { createContext, Dispatch, SetStateAction, useState } from 'react';\n\nexport interface OptionsRowInterface {\n  outputType: string;\n  setOutputType: Dispatch<SetStateAction<string>>;\n  measurementPeriodStart: Date | null;\n  setMeasurementPeriodStart: Dispatch<SetStateAction<Date | null>>;\n  measurementPeriodEnd: Date | null;\n  setMeasurementPeriodEnd: Dispatch<SetStateAction<Date | null>>;\n  calculationOptions: CalculatorTypes.CalculationOptions;\n  setCalculationOptions: Dispatch<SetStateAction<CalculatorTypes.CalculationOptions>>;\n}\n\nexport const OptionsRowContext = createContext<OptionsRowInterface>({\n  outputType: 'raw',\n  setOutputType: () => {},\n  measurementPeriodStart: new Date('1/1/2019'),\n  setMeasurementPeriodStart: () => {},\n  measurementPeriodEnd: new Date('12/31/2019'),\n  setMeasurementPeriodEnd: () => {},\n  calculationOptions: {\n    calculateHTML: false,\n    calculateSDEs: false\n  },\n  setCalculationOptions: () => {}\n});\n\nconst OptionsRowProvider = ({ children }: { children: any }) => {\n  const [outputType, setOutputType] = useState<string>('raw');\n  const [measurementPeriodStart, setMeasurementPeriodStart] = useState<Date | null>(new Date('1/1/2019'));\n  const [measurementPeriodEnd, setMeasurementPeriodEnd] = useState<Date | null>(new Date('12/31/2019'));\n  const [calculationOptions, setCalculationOptions] = useState<CalculatorTypes.CalculationOptions>({\n    calculateHTML: false,\n    calculateSDEs: false\n  });\n\n  return (\n    <OptionsRowContext.Provider\n      value={{\n        outputType,\n        setOutputType,\n        measurementPeriodStart,\n        setMeasurementPeriodStart,\n        measurementPeriodEnd,\n        setMeasurementPeriodEnd,\n        calculationOptions,\n        setCalculationOptions\n      }}\n    >\n      {children}\n    </OptionsRowContext.Provider>\n  );\n};\nexport default OptionsRowProvider;\n","import React, { useContext } from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { OptionsRowContext } from '../../contexts/optionsRowContext';\n\nexport default function RadioButtonsGroup() {\n  const { outputType, setOutputType } = useContext(OptionsRowContext);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setOutputType((event.target as HTMLInputElement).value);\n  };\n\n  return (\n    <FormControl component=\"fieldset\">\n      <RadioGroup name=\"type\" value={outputType} onChange={handleChange}>\n        <FormControlLabel control={<Radio color=\"primary\" />} value=\"rawResults\" label=\"Raw\" />\n        <FormControlLabel control={<Radio color=\"primary\" />} value=\"detailedResults\" label=\"Detailed\" />\n        <FormControlLabel control={<Radio color=\"primary\" />} value=\"measureReports\" label=\"Measure Reports\" />\n        <FormControlLabel control={<Radio color=\"primary\" />} value=\"gapsInCare\" label=\"Gaps In Care\" />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n\nexport { RadioButtonsGroup };\n","import React, { useContext } from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { OptionsRowContext } from '../../contexts/optionsRowContext';\n\nfunction CheckboxesGroup() {\n  const OptionsRowInfo = useContext(OptionsRowContext);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    OptionsRowInfo.setCalculationOptions({\n      ...OptionsRowInfo.calculationOptions,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return (\n    <FormGroup>\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={OptionsRowInfo.calculationOptions.calculateSDEs}\n            onChange={handleChange}\n            name=\"calculateSDEs\"\n            color=\"primary\"\n          />\n        }\n        label=\"Calculate SDEs\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={OptionsRowInfo.calculationOptions.calculateHTML}\n            onChange={handleChange}\n            name=\"calculateHTML\"\n            color=\"primary\"\n          />\n        }\n        label=\"Calculate HTML\"\n      />\n    </FormGroup>\n  );\n}\n\nexport { CheckboxesGroup };\n","import React, { useContext } from 'react';\nimport DateFnsUtils from '@date-io/date-fns'; // choose your lib\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { OptionsRowContext } from '../../contexts/optionsRowContext';\n\nfunction MeasurementDateStart() {\n  const OptionsRowInfo = useContext(OptionsRowContext);\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <DatePicker\n        value={OptionsRowInfo.measurementPeriodStart}\n        format=\"MM/dd/yyyy\"\n        onChange={OptionsRowInfo.setMeasurementPeriodStart}\n      />\n    </MuiPickersUtilsProvider>\n  );\n}\nfunction MeasurementDateEnd() {\n  const OptionsRowInfo = useContext(OptionsRowContext);\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <DatePicker\n        value={OptionsRowInfo.measurementPeriodEnd}\n        format=\"MM/dd/yyyy\"\n        onChange={OptionsRowInfo.setMeasurementPeriodEnd}\n      />\n    </MuiPickersUtilsProvider>\n  );\n}\n\nexport { MeasurementDateStart, MeasurementDateEnd };\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { RadioButtonsGroup } from '../inputs/radioButtons';\nimport { CheckboxesGroup } from '../inputs/checkboxes';\nimport { MeasurementDateStart, MeasurementDateEnd } from '../inputs/datePicker';\n\nexport default function OptionsRow() {\n  return (\n    <React.Fragment>\n      <Grid item xs={4}>\n        <h3>Output Type:</h3>\n        <RadioButtonsGroup />\n      </Grid>\n      <Grid item xs={4}>\n        <h3>Calculation Options:</h3>\n        <CheckboxesGroup />\n      </Grid>\n      <Grid item xs={4}>\n        <h3>Measurement Start: </h3>\n        <MeasurementDateStart />\n        <h3>Measurement End: </h3>\n        <MeasurementDateEnd />\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { createContext, Dispatch, useCallback, useEffect, useState } from 'react';\nimport { DropEvent, FileRejection } from 'react-dropzone';\n\nexport interface InputRowInterface {\n  onMeasureUpload: <T extends File>(acceptedFiles: T[], fileRejections: FileRejection[], event: DropEvent) => void;\n  onPatientUpload: <T extends File>(acceptedFiles: T[], fileRejections: FileRejection[], event: DropEvent) => void;\n  measureFileName: string | null;\n  setMeasureFileName: (files: any) => void;\n  patientFileName: string | null;\n  setPatientFileName: (files: any) => void;\n  onMeasureDropdownChange: (event: React.ChangeEvent<{ value: unknown }>) => void;\n  onECQMMeasureDropdownChange: (event: React.ChangeEvent<{ value: unknown }>) => void;\n  onPatientDropdownChange: (event: React.ChangeEvent<{ value: unknown }>) => void;\n  onECQMPatientDropdownChange: (event: React.ChangeEvent<{ value: unknown }>) => void;\n  onFHIRPatientDropdownChange: (event: React.ChangeEvent<{ value: unknown }>) => void;\n  measureOptions: string[];\n  ecqmMeasureOptions: string[];\n  patientOptions: string[];\n  ecqmPatientOptions: string[];\n  fhirPatientOptions: string[];\n  setPatientOptions: any;\n  setECQMPatientOptions: any;\n  setFHIRPatientOptions: any;\n  measureBundle: any;\n  patientBundle: any;\n  setMeasureBundle: Dispatch<any>;\n  setPatientBundle: Dispatch<any>;\n  fhirName: any;\n  setFHIRName: any;\n}\n\nexport const InputRowContext = createContext<InputRowInterface>({\n  onMeasureUpload: <T extends File>(acceptedFiles: T[], fileRejections: FileRejection[], event: DropEvent) => null,\n  onPatientUpload: <T extends File>(acceptedFiles: T[], fileRejections: FileRejection[], event: DropEvent) => null,\n  measureFileName: null,\n  setMeasureFileName: (files: any) => null,\n  patientFileName: null,\n  setPatientFileName: (files: any) => null,\n  onMeasureDropdownChange: (event: React.ChangeEvent<{ value: unknown }>) => null,\n  onECQMMeasureDropdownChange: (event: React.ChangeEvent<{ value: unknown }>) => null,\n  onPatientDropdownChange: (event: React.ChangeEvent<{ value: unknown }>) => null,\n  onECQMPatientDropdownChange: (event: React.ChangeEvent<{ value: unknown }>) => null,\n  onFHIRPatientDropdownChange: (event: React.ChangeEvent<{ value: unknown }>) => null,\n  measureOptions: [],\n  ecqmMeasureOptions: [],\n  patientOptions: [],\n  ecqmPatientOptions: [],\n  fhirPatientOptions: [],\n  setECQMPatientOptions: null,\n  setPatientOptions: null,\n  setFHIRPatientOptions: null,\n  measureBundle: null,\n  patientBundle: null,\n  setMeasureBundle: () => {},\n  setPatientBundle: () => {},\n  fhirName: null,\n  setFHIRName: null\n});\n\nconst InputRowProvider = ({ children }: { children: any }) => {\n  const [measureBundle, setMeasureBundle] = useState<any>(null);\n  const [patientBundle, setPatientBundle] = useState<any>(null);\n  const [measureFileName, setMeasureFileName] = useState<string | null>(null);\n  const [patientFileName, setPatientFileName] = useState<string | null>(null);\n  const [measureOptions, setMeasureOptions] = useState<string[]>([]);\n  const [ecqmMeasureOptions, setECQMMeasureOptions] = useState<string[]>([]);\n  const [patientOptions, setPatientOptions] = useState<string[]>([]);\n  const [ecqmPatientOptions, setECQMPatientOptions] = useState<string[]>([]);\n  const [fhirPatientOptions, setFHIRPatientOptions] = useState<string[]>([]);\n  const [fhirName, setFHIRName] = useState<any>();\n\n  const onMeasureUpload = useCallback(files => {\n    const measureBundleFile = files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      setMeasureFileName(measureBundleFile.path);\n      setMeasureBundle(JSON.parse(reader.result as string));\n    };\n    reader.readAsText(measureBundleFile);\n  }, []);\n  const onPatientUpload = useCallback(files => {\n    const patientBundleFile = files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      setPatientFileName(patientBundleFile.path);\n      setPatientBundle([JSON.parse(reader.result as string)]);\n    };\n    reader.readAsText(patientBundleFile);\n  }, []);\n\n  const onMeasureDropdownChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    let name = event.target.value as string;\n\n    fetch(\n      `https://raw.githubusercontent.com/DBCG/connectathon/master/fhir401/bundles/measure/` +\n        name +\n        `/` +\n        name +\n        `-bundle.json`\n    )\n      .then(response => response.json())\n      .then(data => {\n        setMeasureFileName(name);\n        setFHIRName(`${name?.slice(0, 3)}_${name?.slice(3)}`);\n        setMeasureBundle(data);\n        return fetch(\n          `https://api.github.com/repos/dbcg/connectathon/contents/fhir401/bundles/measure/${name}/${name}-files`\n        );\n      })\n      .then(response => response.json())\n      .then(data => {\n        const names = data.map((n: { name: string }) => {\n          return n.name;\n        });\n        const filteredNames = names.filter((name: string) => {\n          return name.startsWith('tests');\n        });\n        setPatientOptions(filteredNames);\n        setECQMPatientOptions([]);\n        return fetch(\n          `https://api.github.com/repos/projecttacoma/fhir-patient-generator/contents/${name?.slice(\n            0,\n            3\n          )}_${name?.slice(3)}/patients-r4`\n        );\n      })\n      .then(response => response.json())\n      .then(data => {\n        const names = data.map((n: { name: string }) => {\n          return n.name === 'denominator' || n.name === 'numerator' || n.name === 'ipop' || n.name === 'none'\n            ? n.name\n            : null;\n        });\n        setFHIRPatientOptions(names);\n      })\n      .catch(error => console.log('error: ', error));\n  };\n  const onECQMMeasureDropdownChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    let name = event.target.value as string;\n    fetch(\n      `https://raw.githubusercontent.com/cqframework/ecqm-content-r4/master/bundles/measure/` +\n        name +\n        `/` +\n        name +\n        `-bundle.json`\n    )\n      .then(response => response.json())\n      .then(data => {\n        setMeasureFileName(name);\n        setMeasureBundle(data);\n        return fetch(\n          `https://api.github.com/repos/cqframework/ecqm-content-r4/contents/bundles/measure/${name}/${name}-files`\n        );\n      })\n      .then(response => response.json())\n      .then(data => {\n        const names = data.map((n: { name: string }) => {\n          return n.name;\n        });\n        const filteredNames = names.filter((name: string) => {\n          return name.startsWith('tests');\n        });\n        setECQMPatientOptions(filteredNames);\n      })\n      .catch(error => console.log('error: ', error));\n  };\n  const onPatientDropdownChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const patientName = event.target.value as string;\n\n    fetch(\n      `https://raw.githubusercontent.com/DBCG/connectathon/master/fhir401/bundles/measure/${measureFileName}/${measureFileName}-files/${patientName}`\n    )\n      .then(response => response.json())\n      .then(data => {\n        setPatientBundle([data]);\n        setPatientFileName(patientName);\n      });\n  };\n  const onECQMPatientDropdownChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const patientName = event.target.value as string;\n\n    fetch(\n      `https://raw.githubusercontent.com/cqframework/ecqm-content-r4/master/bundles/measure/${measureFileName}/${measureFileName}-files/${patientName}`\n    )\n      .then(response => response.json())\n      .then(data => {\n        setPatientBundle(data);\n        setPatientFileName(patientName);\n      });\n  };\n  const onFHIRPatientDropdownChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    const patientChoice = event.target.value as string;\n    const fhirPatientFiles: any[] = [];\n    fetch(\n      `https://api.github.com/repos/projecttacoma/fhir-patient-generator/contents/${fhirName}/patients-r4/${patientChoice}`\n    )\n      .then(response => response.json())\n      .then(data => {\n        const paths = data.map((p: { path: any }) => {\n          return p.path;\n        });\n        Promise.all(\n          paths.map((path: any) =>\n            fetch(`https://raw.githubusercontent.com/projecttacoma/fhir-patient-generator/master/${path}`)\n              .then(response => response.json())\n              .then(data1 => {\n                fhirPatientFiles.push(data1);\n              })\n          )\n        );\n        setPatientBundle(fhirPatientFiles);\n        setPatientFileName(patientChoice);\n      });\n  };\n\n  useEffect(() => {\n    fetch(`https://api.github.com/repos/dbcg/connectathon/contents/fhir401/bundles/measure`)\n      .then(response => response.json())\n      .then(data => {\n        const names = data.map((n: { name: string }) => {\n          return n.name;\n        });\n        setMeasureOptions(names);\n        return fetch(`https://api.github.com/repos/cqframework/ecqm-content-r4/contents/bundles/measure`);\n      })\n      .then(response => {\n        if (response.status === 403) {\n          if (response.headers.get('X-RateLimit-Reset') != null) {\n            let resetTime = new Date(parseInt(response.headers.get('X-RateLimit-Reset') as string) * 1000);\n            throw new Error(`GitHub Rate Limited until: ${resetTime}`);\n          } else {\n            throw new Error('Auth error with GitHub.');\n          }\n        }\n        return response.json();\n      })\n      .then(data => {\n        const names = data.map((n: { name: string }) => {\n          return n.name;\n        });\n        setECQMMeasureOptions(names);\n      })\n      .catch(e => {\n        console.error('Error fetching from GitHub', e);\n      });\n  }, []);\n  return (\n    <InputRowContext.Provider\n      value={{\n        onMeasureUpload,\n        onPatientUpload,\n        measureFileName,\n        patientFileName,\n        setPatientFileName,\n        setMeasureFileName,\n        onMeasureDropdownChange,\n        onECQMMeasureDropdownChange,\n        onPatientDropdownChange,\n        onECQMPatientDropdownChange,\n        onFHIRPatientDropdownChange,\n        measureOptions,\n        ecqmMeasureOptions,\n        patientOptions,\n        ecqmPatientOptions,\n        fhirPatientOptions,\n        setECQMPatientOptions,\n        setPatientOptions,\n        setFHIRPatientOptions,\n        measureBundle,\n        patientBundle,\n        setMeasureBundle,\n        setPatientBundle,\n        fhirName,\n        setFHIRName\n      }}\n    >\n      {children}\n    </InputRowContext.Provider>\n  );\n};\n\nexport default InputRowProvider;\n","import { Grid } from '@material-ui/core';\nimport React, { useContext } from 'react';\nimport { DropzoneRootProps, useDropzone } from 'react-dropzone';\nimport styled from 'styled-components';\nimport { InputRowContext } from '../../contexts/inputRowContext';\n\nconst getColor = (props: DropzoneRootProps) => {\n  if (props.isDragAccept) {\n    return '#00e676';\n  }\n  if (props.isDragReject) {\n    return '#ff1744';\n  }\n  if (props.isDragActive) {\n    return '#2196f3';\n  }\n  return '#eeeeee';\n};\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-width: 2px;\n  border-radius: 2px;\n  border-color: ${(props: DropzoneRootProps) => getColor(props)};\n  border-style: dashed;\n  background-color: #fafafa;\n  color: #7f7f7f;\n  outline: none;\n  transition: border 0.24s ease-in-out;\n`;\n\nexport const MeasureFileUpload = () => {\n  const onDrop = useContext(InputRowContext).onMeasureUpload;\n\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone({\n    onDrop,\n    accept: '.json'\n  });\n\n  return (\n    <Grid item xs={12}>\n      <Container {...getRootProps({ className: 'dropzone', isDragActive, isDragAccept, isDragReject })}>\n        <input {...getInputProps()} />\n        <p>Drag and drop file here, or click to select file</p>\n      </Container>\n    </Grid>\n  );\n};\n\nexport const PatientFileUpload = () => {\n  const onDrop = useContext(InputRowContext).onPatientUpload;\n\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone({\n    onDrop,\n    accept: '.json'\n  });\n\n  return (\n    <Grid item xs={12}>\n      <Container {...getRootProps({ className: 'dropzone', isDragActive, isDragAccept, isDragReject })}>\n        <input {...getInputProps()} />\n        <p>Drag and drop file here, or click to select file</p>\n      </Container>\n    </Grid>\n  );\n};\n","import React, { useContext } from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core';\nimport { InputRowContext } from '../../contexts/inputRowContext';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%'\n    }\n  })\n);\n\nexport function MeasureDropdown() {\n  const classes = useStyles();\n  const { measureFileName, onMeasureDropdownChange, measureOptions } = useContext(InputRowContext);\n  return (\n    <div style={{ width: '100%' }}>\n      <FormControl className={classes.root}>\n        <Select value={measureFileName || ''} onChange={onMeasureDropdownChange}>\n          {measureOptions.map(option => (\n            <MenuItem key={option} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\nexport function ECQMMeasureDropdown() {\n  const classes = useStyles();\n  const { measureFileName, onECQMMeasureDropdownChange, ecqmMeasureOptions } = useContext(InputRowContext);\n  return (\n    <div style={{ width: '100%' }}>\n      <FormControl className={classes.root}>\n        <Select value={measureFileName || ''} onChange={onECQMMeasureDropdownChange}>\n          {ecqmMeasureOptions.map(option => (\n            <MenuItem key={option} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\nexport function PatientDropdown() {\n  const classes = useStyles();\n  const { patientFileName, onPatientDropdownChange, patientOptions } = useContext(InputRowContext);\n  return (\n    <div style={{ width: '100%' }}>\n      <FormControl className={classes.root}>\n        <Select value={patientFileName || ''} onChange={onPatientDropdownChange}>\n          {patientOptions.map(option => (\n            <MenuItem key={option} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\nexport function ECQMPatientDropdown() {\n  const classes = useStyles();\n  const { patientFileName, onECQMPatientDropdownChange, ecqmPatientOptions } = useContext(InputRowContext);\n  return (\n    <div style={{ width: '100%' }}>\n      <FormControl className={classes.root}>\n        <Select value={patientFileName || ''} onChange={onECQMPatientDropdownChange}>\n          {ecqmPatientOptions.map(option => (\n            <MenuItem key={option} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\nexport function FHIRPatientDropdown() {\n  const classes = useStyles();\n  const { patientFileName, onFHIRPatientDropdownChange, fhirPatientOptions } = useContext(InputRowContext);\n  return (\n    <div style={{ width: '100%' }}>\n      <FormControl className={classes.root}>\n        <Select value={patientFileName || ''} onChange={onFHIRPatientDropdownChange}>\n          {fhirPatientOptions.map(option => (\n            <MenuItem key={option} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { MeasureFileUpload, PatientFileUpload } from '../fileSelection/fileUpload';\nimport {\n  MeasureDropdown,\n  ECQMMeasureDropdown,\n  PatientDropdown,\n  ECQMPatientDropdown,\n  FHIRPatientDropdown\n} from '../fileSelection/fileImport';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core';\nimport { InputRowContext } from '../../contexts/inputRowContext';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      color: '#3f51b5'\n    }\n  })\n);\nexport default function InputRow() {\n  const classes = useStyles();\n  const {\n    measureFileName,\n    patientFileName,\n    setPatientFileName,\n    setMeasureFileName,\n    setPatientOptions,\n    setECQMPatientOptions\n  } = useContext(InputRowContext);\n  return (\n    <React.Fragment>\n      <Grid item xs={6}>\n        <h2>Measure Bundle: </h2>\n        {measureFileName !== null && <h3>Current Measure Bundle:</h3>}\n        {measureFileName !== null && (\n          <Grid container>\n            <h3 className={classes.root}> {measureFileName}</h3>{' '}\n            {measureFileName !== null && (\n              <IconButton\n                aria-label=\"delete\"\n                onClick={() => {\n                  setMeasureFileName(null);\n                  setPatientOptions([]);\n                  setECQMPatientOptions([]);\n                  setPatientFileName(null);\n                }}\n              >\n                <DeleteIcon />\n              </IconButton>\n            )}\n          </Grid>\n        )}\n        <h4>Upload From File System:</h4>\n        <MeasureFileUpload />\n        <h4>OR Select From Connectathon Repository:</h4>\n        <MeasureDropdown />\n        <h4>OR Select From eCQM Measure Content Repository:</h4>\n        <ECQMMeasureDropdown />\n      </Grid>\n      <Grid item xs={6}>\n        <h2>Patient Bundle: </h2>\n        {patientFileName !== null && <h3>Current Patient Bundle:</h3>}\n        {patientFileName !== null && (\n          <Grid container>\n            <h3 className={classes.root}> {patientFileName}</h3>{' '}\n            {patientFileName !== null && (\n              <IconButton\n                aria-label=\"delete\"\n                onClick={() => {\n                  setPatientFileName(null);\n                }}\n              >\n                <DeleteIcon />\n              </IconButton>\n            )}\n          </Grid>\n        )}\n        <h4>Upload From File System:</h4>\n        <PatientFileUpload />\n        <h4>OR Select From Connectathon Repository:</h4>\n        <PatientDropdown />\n        <h4>OR Select From FHIR Patient Generator Repository:</h4>\n        <FHIRPatientDropdown />\n        <h4>OR Select From eCQM Measure Content Repository:</h4>\n        <ECQMPatientDropdown />\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport 'date-fns';\nimport './index.css';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport OptionsRow from './components/formatting/optionsRow';\nimport InputRow from './components/formatting/inputRow';\nimport Button from '@material-ui/core/Button';\nimport { Calculator } from 'fqm-execution';\nimport ReactJson from 'react-json-view';\nimport parse from 'html-react-parser';\nimport fileDownload from 'js-file-download';\nimport { OptionsRowContext } from './contexts/optionsRowContext';\nimport { InputRowContext } from './contexts/inputRowContext';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex-grow',\n      flexDirection: 'column',\n      alignItems: 'center',\n\n      '& > *': {\n        margin: theme.spacing(1)\n      }\n    },\n    formControl: {\n      margin: theme.spacing(1)\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    },\n    container: {\n      display: 'flex-grow'\n    },\n    highlightedMarkup: {\n      '& pre': {\n        whiteSpace: 'pre-wrap'\n      }\n    }\n  })\n);\n\ninterface HTML {\n  groupId: string;\n  html: string;\n}\n\nexport default function App() {\n  const classes = useStyles();\n\n  const [results, setResults] = useState<any>(null);\n  const [htmls, setHTMLs] = useState<HTML[]>([]);\n\n  const {\n    outputType,\n    measurementPeriodStart,\n    setMeasurementPeriodStart,\n    measurementPeriodEnd,\n    setMeasurementPeriodEnd,\n    calculationOptions,\n    setCalculationOptions\n  } = useContext(OptionsRowContext);\n\n  const {\n    measureFileName,\n    setPatientFileName,\n    setMeasureFileName,\n    measureBundle,\n    patientBundle,\n    setMeasureBundle,\n    setPatientBundle\n  } = useContext(InputRowContext);\n\n  return (\n    <div className={classes.root}>\n      <Grid>\n        <h1 id=\"header\">FQM Execution Demo</h1>\n        <Grid container justify=\"space-evenly\">\n          <Grid container item xs={11} spacing={2} alignItems=\"center\">\n            <InputRow />\n          </Grid>\n        </Grid>\n        <Grid container spacing={1} justify=\"space-evenly\">\n          <Grid container item xs={11} spacing={2}>\n            <OptionsRow />\n          </Grid>\n        </Grid>\n        <Grid container justify=\"flex-end\">\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              setMeasureFileName(null);\n              setPatientFileName(null);\n              setMeasureBundle(null);\n              setPatientBundle(null);\n              setMeasurementPeriodStart(new Date('1/1/2019'));\n              setMeasurementPeriodEnd(new Date('12/31/2019'));\n              setCalculationOptions({\n                calculateHTML: false,\n                calculateSDEs: false\n              });\n              setResults(null);\n              setHTMLs([]);\n            }}\n          >\n            Reset\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              const options = {\n                measurementPeriodStart: measurementPeriodStart?.toISOString(),\n                measurementPeriodEnd: measurementPeriodEnd?.toISOString(),\n                ...calculationOptions\n              };\n              if (outputType === 'rawResults') {\n                setResults(Calculator.calculateRaw(measureBundle, patientBundle, options));\n              } else if (outputType === 'detailedResults') {\n                let detailedResultsCalculation = Calculator.calculate(measureBundle, patientBundle, options);\n                setResults(detailedResultsCalculation);\n                let IDhtml = [];\n                if (detailedResultsCalculation !== null && calculationOptions.calculateHTML === true) {\n                  let i: any;\n                  for (i in detailedResultsCalculation.results[0].detailedResults) {\n                    if (detailedResultsCalculation.results[0].detailedResults !== undefined) {\n                      IDhtml.push({\n                        groupId: detailedResultsCalculation.results[0].detailedResults[i].groupId,\n                        html: detailedResultsCalculation.results[0].detailedResults[i].html!\n                      });\n                    }\n                  }\n                  setHTMLs(IDhtml);\n                } else {\n                  setHTMLs([]);\n                }\n              } else if (outputType === 'measureReports') {\n                const mrResults = Calculator.calculateMeasureReports(measureBundle, patientBundle, options);\n                const mrs = mrResults.results;\n\n                if (options.calculateHTML) {\n                  const htmls: HTML[] = mrs.map(m => ({\n                    groupId: m.id || '',\n                    html: m.text?.div || ''\n                  }));\n                  setHTMLs(htmls);\n                }\n\n                setResults(mrResults);\n              } else if (outputType === 'gapsInCare') {\n                setResults(Calculator.calculateGapsInCare(measureBundle, patientBundle, options));\n              }\n            }}\n          >\n            Calculate\n          </Button>\n        </Grid>\n        <Grid container>\n          <Grid container item xs={6} direction=\"row\">\n            <div>\n              <h2>Results:</h2>\n              {results && (\n                <ReactJson src={results} enableClipboard={true} theme=\"shapeshifter:inverted\" collapsed={2} />\n              )}\n              {results && (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    fileDownload(\n                      JSON.stringify(results),\n                      measureFileName?.includes('.json')\n                        ? `results-${measureFileName}`\n                        : `results-${measureFileName}.json`\n                    );\n                  }}\n                >\n                  Download\n                </Button>\n              )}\n            </div>\n          </Grid>\n          <Grid container item xs={6} direction=\"row\">\n            {htmls &&\n              htmls.map(html => {\n                return (\n                  <div key={html.groupId} className={classes.highlightedMarkup}>\n                    <h2>HTML:</h2>\n                    {parse(html.html)}\n                  </div>\n                );\n              })}\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport OptionsRowProvider from './contexts/optionsRowContext';\nimport InputRowProvider from './contexts/inputRowContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <OptionsRowProvider>\n      <InputRowProvider>\n        <App />\n      </InputRowProvider>\n    </OptionsRowProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}